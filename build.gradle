/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // Apply the maven plugin to add support for Maven
    id 'maven-publish'
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java/gradle']
	resources.srcDirs = ['src/main/java/gradle/resources']
    }
    test {
        java.srcDirs = ['src/test/java/gradle']
    }
}

repositories {
    mavenCentral()
}

run {
	standardInput = System.in
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.2-jre'
    // Use JUnit test framework
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0-M1'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.0-M1'
}

application {
    // Define the main class for the application.
    mainClassName = 'gradle.calculator' //path to the main file
}

test {
    useJUnitPlatform()
}

ext {
    zipName = "xdudaj02_xputal00_xsucha17_xsusik00.zip"
}

task doxygen() {
    doLast{
	exec {
            executable 'doxygen'
            args = ["${new File(projectDir, "src/Doxyfile")}"]
        }
    }
}

wrapper {
    gradleVersion = '6.3'
}

task delZip(type: Delete) {
	delete "$project.buildDir/toArchive"
	delete zipName
}

task copy(type: Copy) {
	dependsOn delZip
//	org.apache.tools.ant.DirectoryScanner.removeDefaultExclude("**/.gitignore")
//	org.apache.tools.ant.DirectoryScanner.removeDefaultExclude("**/.git/**")
	destinationDir = project.buildDir
	from ("$project.rootDir") {
		exclude '**/.gradle'
		exclude 'build'
		exclude '.idea'
		into 'toArchive'
	}
	from ("$project.rootDir/.git") {into "toArchive/.git"}
}

task pack(type: Zip) {
        dependsOn copy
	destinationDirectory = project.rootDir
        archiveFileName = zipName
	
	from ("$project.buildDir/toArchive") {
	    exclude "doxygen_output"
	    exclude "installer"
	    into "repo"
	}
        from ("$project.buildDir/toArchive/doxygen_output") {into "doc"}
	from ("$project.buildDir/toArchive/install") {into "install"}
	from ("$project.buildDir/toArchive/.git") {into "repo/.git"}
}

task profile (type: Jar) {
	include 'stddev.java'
	include '/libs/math.java'
	manifest.attributes(
		'Main-Class': 'gradle.stddev.java',
		'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' '),
)}

